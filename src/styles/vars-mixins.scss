@function rem($px) {
   @return #{$px/16}rem;
}


@mixin title() {
   font-size: rem(50);

   position: relative;

   display: inline-block;

   margin: rem(30) 0;

   &:after {
      position: absolute;
      left: 10%;

      display: inline-block;

      width: 80%;
      height: rem(50);
      margin-top: 10px;

      content: '';
      transition: opacity .35s, transform .35s;
      transform: scale(1);

      opacity: 1;
      border-bottom: rem(2) solid;
   }

   &:hover:after {
      transform: scale(0,1);

      opacity: 0;
   }

   &-container {
      text-align: center;
   }
}


@mixin gradient-background() {
   animation: gradient 10s ease infinite;

   background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
   background-size: 400% 400%;
}
@keyframes gradient {
   0% {
      background-position: 0 50%;
   }
   50% {
      background-position: 100% 50%;
   }
   100% {
      background-position: 0 50%;
   }
}


@mixin skills-gradient {
   /*
   * Animation variables
   */
   $animationSteps: 20;
   $animationDuration: 20;
   $animationElement: span;
   $animationElementsCount: 122;
   $delayBetweenLetters: .2;
   /*
   * Element animation delay loop
   */
   $totalDelayTime: $animationElementsCount * $delayBetweenLetters;

   /*
   * Elements settings
   */
   #{$animationElement} {
      animation-name: anim-text-flow-keys;
      animation-duration: #{$animationDuration}s;
      animation-iteration-count: infinite;
      animation-direction: alternate;

      animation-fill-mode: forwards;
   }

   /*
   * Keyframe loop
   */
   @keyframes anim-text-flow-keys {
      @for $i from 0 through $animationSteps {
         #{percentage($i * (1 / $animationSteps))} {
            color: hsla(random(365), 60, 60, 1);
         }
      }
   }

   @for $i from 1 through $animationElementsCount {
      #{$animationElement}:nth-of-type(#{$i}) {
         animation-delay: #{($i * $delayBetweenLetters) - $totalDelayTime}s;
      }
   }
}



@mixin rainbow-text {
   position: relative;

   padding: 0;

   list-style: none;

   &-layer {
      animation: rainbow 1.5s ease-in-out infinite;

      color: #fff;
      text-shadow: rem(-1) rem(-1) 0 #000,
      1px rem(-1) 0 #000,
      rem(-1) rem(1) 0 #000,
      rem(1) rem(1) 0 #000,
      rem(4) rem(4) 0 rgba(0, 0, 0, .2);



      @for $i from 1 through 8 {
         &:nth-child(#{$i}) {
            z-index: #{8 - $i};
            left: #{$i}px;

            animation-delay: #{$i / 10}s;
         }
      }

      &:not(:first-child) {
         position: absolute;
         top: 0;
         right: 0;
         left: 0;

         text-align: center;
      }

      &--white {
         color: #fff;
      }
      &--orange {
         color: #d49c3d;
      }
      &--red {
         color: #d14b3d;
      }
      &--violet {
         color: #cf52eb;
      }
      &--blue {
         color: #44a3f7;
      }
      &--green {
         color: #5acb3c;
      }
      &--yellow {
         color: #debf40;
      }
   }
}

@keyframes rainbow {
   0%,
   100% {
      transform: translateY(.3rem);
   }
   50% {
      transform: translateY(-.3rem);
   }
}